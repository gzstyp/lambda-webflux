<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.4</version>
		<relativePath/>
    </parent>
	<groupId>com.fwtai</groupId>
	<artifactId>lambda-webflux</artifactId>
	<version>v1.0.0</version>
	<description>
        jdk8学习lambda表达式;
        基于注解实现 webflux 的方式;
        基于函数接口 FunctionalInterface 实现 webflux 的方式;
        不管基于‘基于注解实现’或‘基于函数接口’都已解决在IE8版本请求时不出现下载的bug;
        一般情况下,若有2个参数时是既有输入参数又有返回结果，即输入是T，返回的是R,Function《T,R》
        总结:在接收请求参数时,简单类型用注解方式接口,复杂的可以使用基于函数接口来处理接收操作;
        《SpringBoot 5.0-WebFlux 上手系列课程：快速入门》
        JDK8Lambda::check;这种写法仅支持一个参数;

        函数式编程就像使用Excel表格计算最大值、最小值、总和一样的道理,我们不关心是怎么实现的，我们仅想要什么样的结果即可!
        注意命令式编程和函数式编程,jdk1.8之前的都是命令式编程;jdk1.8才有函数式编程
    </description>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.76</version>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
	</build>
</project>